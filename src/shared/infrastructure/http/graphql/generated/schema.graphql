### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuditLog {
  actionType: String!
  changes: [AuditLogChange!]
  createdAt: String!
  executor: User
  executorId: ID!
  id: ID!
  target: User
  targetId: ID!
}

type AuditLogChange {
  key: String!
  values: [AuditLogChangeValue!]!
}

type AuditLogChangeValue {
  from: String!
  to: String!
}

input AuditLogHydrateOption {
  executor: Boolean!
  target: Boolean!
}

type Login {
  expiresAt: String!
  token: String!
}

type Mutation {
  confirmVerification(code: String!, email: String!): Verification
  login(email: String!, password: String!): Login
  pay(amount: Int!, cashierId: String!): Wallet
  register(confirmPassword: String!, email: String!, name: String!, password: String!): User
  resendVerification(email: String!): Verification
  setBalance(balance: Int!, userId: String!): Wallet
  topUp(amount: Int!, receiverId: String!): Wallet
  transferBalance(amount: Int!, receiverId: String!): Wallet
  updateUserAccountTypeByUserId(accountType: String!, userId: String!): User
}

type Query {
  getRecentTransactionsByUserId(hydrate: TransactionHydrateOption, page: Int!, perPage: Int!): TransactionByUserIdWithPagination
  getUser: User
  getUserBalanceByUserId: UserBalance
  getUsersByPagination(page: Int!, perPage: Int!): UserPagination
}

type Transaction {
  amount: Float!
  createdAt: String!
  id: ID!
  receiver: User
  receiverId: ID!
  sender: User
  senderId: ID!
  type: String!
}

type TransactionByUserIdWithPagination {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  page: Int!
  totalPages: Int!
  transactions: [Transaction!]!
}

input TransactionHydrateOption {
  receiver: Boolean!
  sender: Boolean!
}

type User {
  accountType: String!
  createdAt: String!
  deletedAt: String
  email: String!
  id: String!
  isDeleted: Boolean!
  name: String!
  receivedTransactions: [Transaction!]
  sentTransactions: [Transaction!]
  updatedAt: String!
  wallet: Wallet
}

type UserBalance {
  balance: Float!
}

input UserHydrateOption {
  receivedTransactions: Boolean!
  sentTransactions: Boolean!
  wallet: Boolean!
}

type UserPagination {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  page: Int!
  totalPages: Int!
  users: [User!]!
}

type Verification {
  code: String!
  createdAt: String!
  expiredAt: String!
  id: ID!
  status: String!
  updatedAt: String!
  user: User
  userId: ID!
}

type Wallet {
  balance: Float!
  createdAt: String!
  deletedAt: String
  id: ID!
  isDeleted: Boolean!
  updatedAt: String!
  user: User
}

input WalletHydrateOption {
  receiver: Boolean!
  sender: Boolean!
}