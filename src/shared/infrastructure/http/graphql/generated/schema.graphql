### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Login {
  token: String
}

type Mutation {
  confirmVerification(code: String!, email: String!): Verification
  login(email: String!, password: String!): Login
  register(confirmPassword: String!, email: String!, name: String!, password: String!): User
  resendVerification(email: String!): Verification
}

type Query {
  getRecentTransactionByUserId(hydrate: TransactionHydrateOption, page: Int!, perPage: Int!): TransactionByUserIdWithPagination
  getUserBalanceByUserId: UserBalance
}

type Transaction {
  amount: Float!
  createdAt: String!
  id: ID!
  receiver: User
  receiverId: ID!
  sender: User
  senderId: ID!
  type: String!
}

type TransactionByUserIdWithPagination {
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  page: Int
  totalPages: Int
  transactions: [Transaction]
}

input TransactionHydrateOption {
  receiver: Boolean!
  sender: Boolean!
}

type User {
  accountType: String!
  createdAt: String!
  deletedAt: String
  email: String!
  id: String!
  isDeleted: Boolean!
  name: String!
  receivedTransactions: [Transaction]
  sentTransactions: [Transaction]
  updatedAt: String!
  wallet: Wallet
}

type UserBalance {
  balance: Float
}

input UserHydrateOption {
  receivedTransactions: Boolean!
  sentTransactions: Boolean!
  wallet: Boolean!
}

type Verification {
  code: String!
  createdAt: String!
  expiredAt: String!
  id: ID!
  status: String!
  updatedAt: String!
  user: User
  userId: ID!
}

type Wallet {
  balance: Float!
  createdAt: String!
  deletedAt: String
  id: ID!
  isDeleted: Boolean!
  updatedAt: String!
  user: User
}