generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String             @id
  name                 String
  email                String             @unique
  password             String
  accountType          String
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  isDeleted            Boolean
  isVerified           Boolean            @default(false)
  deletedAt            DateTime?
  wallet               UserWallet?
  verifications        UserVerification[]
  auditLogs            UserAuditLog[]
  sentTransactions     UserTransaction[]  @relation("SenderTransaction")
  receivedTransactions UserTransaction[]  @relation("ReceiverTransaction")
}

model UserWallet {
  id        String    @id
  userId    String    @unique
  balance   Decimal   @default(0.00)
  isDeleted Boolean
  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserTransaction {
  id         String   @id
  senderId   String
  receiverId String
  amount     Decimal
  type       String
  createdAt  DateTime @default(now())
  sender     User     @relation("SenderTransaction", fields: [senderId], references: [id])
  receiver   User     @relation("ReceiverTransaction", fields: [receiverId], references: [id])
}

model UserAuditLog {
  id          String   @id
  userId      String
  type        Int
  description String
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}

model UserVerification {
  id        String   @id
  userId    String
  code      String
  status    String
  expiredAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}
